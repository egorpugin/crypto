// autogenerated by tools/tlsparams.cpp

enum class client_certificate_type_identifiers : uint8_t {
    // Unassigned = 0,
    rsa_sign = 1,
    dss_sign = 2,
    rsa_fixed_dh = 3,
    dss_fixed_dh = 4,
    rsa_ephemeral_dh_RESERVED = 5,
    dss_ephemeral_dh_RESERVED = 6,
    // Unassigned = 7-19,
    fortezza_dms_RESERVED = 20,
    // Unassigned = 21-63,
    ecdsa_sign = 64,
    rsa_fixed_ecdh = 65,
    ecdsa_fixed_ecdh = 66,
    gost_sign256 = 67,
    gost_sign512 = 68,
    // Unassigned = 69-223,
    // Reserved for Private Use = 224-255,
};

enum class cipher_suites : uint16_t {
    TLS_NULL_WITH_NULL_NULL = 0x0000,
    TLS_RSA_WITH_NULL_MD5 = 0x0001,
    TLS_RSA_WITH_NULL_SHA = 0x0002,
    TLS_RSA_EXPORT_WITH_RC4_40_MD5 = 0x0003,
    TLS_RSA_WITH_RC4_128_MD5 = 0x0004,
    TLS_RSA_WITH_RC4_128_SHA = 0x0005,
    TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x0006,
    TLS_RSA_WITH_IDEA_CBC_SHA = 0x0007,
    TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0008,
    TLS_RSA_WITH_DES_CBC_SHA = 0x0009,
    TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x000B,
    TLS_DH_DSS_WITH_DES_CBC_SHA = 0x000C,
    TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x000E,
    TLS_DH_RSA_WITH_DES_CBC_SHA = 0x000F,
    TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x0011,
    TLS_DHE_DSS_WITH_DES_CBC_SHA = 0x0012,
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0014,
    TLS_DHE_RSA_WITH_DES_CBC_SHA = 0x0015,
    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x0017,
    TLS_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x0019,
    TLS_DH_anon_WITH_DES_CBC_SHA = 0x001A,
    TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    // Reserved to avoid conflicts with SSLv3 = 0x001C-1D,
    TLS_KRB5_WITH_DES_CBC_SHA = 0x001E,
    TLS_KRB5_WITH_3DES_EDE_CBC_SHA = 0x001F,
    TLS_KRB5_WITH_RC4_128_SHA = 0x0020,
    TLS_KRB5_WITH_IDEA_CBC_SHA = 0x0021,
    TLS_KRB5_WITH_DES_CBC_MD5 = 0x0022,
    TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = 0x0023,
    TLS_KRB5_WITH_RC4_128_MD5 = 0x0024,
    TLS_KRB5_WITH_IDEA_CBC_MD5 = 0x0025,
    TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = 0x0026,
    TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA = 0x0027,
    TLS_KRB5_EXPORT_WITH_RC4_40_SHA = 0x0028,
    TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = 0x0029,
    TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 = 0x002A,
    TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = 0x002B,
    TLS_PSK_WITH_NULL_SHA = 0x002C,
    TLS_DHE_PSK_WITH_NULL_SHA = 0x002D,
    TLS_RSA_PSK_WITH_NULL_SHA = 0x002E,
    TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F,
    TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x0030,
    TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x0031,
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032,
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033,
    TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x0034,
    TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035,
    TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x0036,
    TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x0037,
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038,
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039,
    TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x003A,
    TLS_RSA_WITH_NULL_SHA256 = 0x003B,
    TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C,
    TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D,
    TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x003E,
    TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x003F,
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040,
    TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0041,
    TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x0042,
    TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0043,
    TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x0044,
    TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x0045,
    TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA = 0x0046,
    // Reserved to avoid conflicts with          deployed implementations = 0x0047-4F,
    // Reserved to avoid conflicts = 0x0050-58,
    // Reserved to avoid conflicts with          deployed implementations = 0x0059-5C,
    // Unassigned = 0x005D-5F,
    // Reserved to avoid conflicts with widely deployed implementations = 0x0060-66,
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067,
    TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x0068,
    TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x0069,
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A,
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B,
    TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x006C,
    TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x006D,
    // Unassigned = 0x006E-83,
    TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0084,
    TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x0085,
    TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0086,
    TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x0087,
    TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x0088,
    TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA = 0x0089,
    TLS_PSK_WITH_RC4_128_SHA = 0x008A,
    TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x008B,
    TLS_PSK_WITH_AES_128_CBC_SHA = 0x008C,
    TLS_PSK_WITH_AES_256_CBC_SHA = 0x008D,
    TLS_DHE_PSK_WITH_RC4_128_SHA = 0x008E,
    TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x008F,
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x0090,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x0091,
    TLS_RSA_PSK_WITH_RC4_128_SHA = 0x0092,
    TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x0093,
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x0094,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x0095,
    TLS_RSA_WITH_SEED_CBC_SHA = 0x0096,
    TLS_DH_DSS_WITH_SEED_CBC_SHA = 0x0097,
    TLS_DH_RSA_WITH_SEED_CBC_SHA = 0x0098,
    TLS_DHE_DSS_WITH_SEED_CBC_SHA = 0x0099,
    TLS_DHE_RSA_WITH_SEED_CBC_SHA = 0x009A,
    TLS_DH_anon_WITH_SEED_CBC_SHA = 0x009B,
    TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C,
    TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D,
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E,
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F,
    TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0x00A0,
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0x00A1,
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2,
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3,
    TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0x00A4,
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0x00A5,
    TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0x00A6,
    TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0x00A7,
    TLS_PSK_WITH_AES_128_GCM_SHA256 = 0x00A8,
    TLS_PSK_WITH_AES_256_GCM_SHA384 = 0x00A9,
    TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0x00AA,
    TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0x00AB,
    TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0x00AC,
    TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0x00AD,
    TLS_PSK_WITH_AES_128_CBC_SHA256 = 0x00AE,
    TLS_PSK_WITH_AES_256_CBC_SHA384 = 0x00AF,
    TLS_PSK_WITH_NULL_SHA256 = 0x00B0,
    TLS_PSK_WITH_NULL_SHA384 = 0x00B1,
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0x00B2,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0x00B3,
    TLS_DHE_PSK_WITH_NULL_SHA256 = 0x00B4,
    TLS_DHE_PSK_WITH_NULL_SHA384 = 0x00B5,
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0x00B6,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0x00B7,
    TLS_RSA_PSK_WITH_NULL_SHA256 = 0x00B8,
    TLS_RSA_PSK_WITH_NULL_SHA384 = 0x00B9,
    TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BA,
    TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BB,
    TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BC,
    TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BD,
    TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BE,
    TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 = 0x00BF,
    TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C0,
    TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C1,
    TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C2,
    TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C3,
    TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C4,
    TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 = 0x00C5,
    TLS_SM4_GCM_SM3 = 0x00C6,
    TLS_SM4_CCM_SM3 = 0x00C7,
    // Unassigned = 0x00C8-FE,
    TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0x00FF,
    // Unassigned = 0x01-09,*,
    // Unassigned = 0x0A00-09,
    // Reserved = 0x0A0A,
    // Unassigned = 0x0A0B-FF,
    // Unassigned = 0x0B-12,*,
    // Unassigned = 0x1300,
    TLS_AES_128_GCM_SHA256 = 0x1301,
    TLS_AES_256_GCM_SHA384 = 0x1302,
    TLS_CHACHA20_POLY1305_SHA256 = 0x1303,
    TLS_AES_128_CCM_SHA256 = 0x1304,
    TLS_AES_128_CCM_8_SHA256 = 0x1305,
    TLS_AEGIS_256_SHA384 = 0x1306,
    TLS_AEGIS_128L_SHA256 = 0x1307,
    // Unassigned = 0x1308-FF,
    // Unassigned = 0x14-19,*,
    // Unassigned = 0x1A00-19,
    // Reserved = 0x1A1A,
    // Unassigned = 0x1A1B-FF,
    // Unassigned = 0x1B-29,*,
    // Unassigned = 0x2A00-29,
    // Reserved = 0x2A2A,
    // Unassigned = 0x2A2B-FF,
    // Unassigned = 0x2B-39,*,
    // Unassigned = 0x3A00-39,
    // Reserved = 0x3A3A,
    // Unassigned = 0x3A3B-FF,
    // Unassigned = 0x3B-49,*,
    // Unassigned = 0x4A00-49,
    // Reserved = 0x4A4A,
    // Unassigned = 0x4A4B-FF,
    // Unassigned = 0x4B-55,*,
    TLS_FALLBACK_SCSV = 0x5600,
    // Unassigned = 0x5601-FF,
    // Unassigned = 0x57-59,*,
    // Unassigned = 0x5A00-59,
    // Reserved = 0x5A5A,
    // Unassigned = 0x5A5B-FF,
    // Unassigned = 0x5B-69,*,
    // Unassigned = 0x6A00-69,
    // Reserved = 0x6A6A,
    // Unassigned = 0x6A6B-FF,
    // Unassigned = 0x6B-79,*,
    // Unassigned = 0x7A00-79,
    // Reserved = 0x7A7A,
    // Unassigned = 0x7A7B-FF,
    // Unassigned = 0x7B-89,*,
    // Unassigned = 0x8A00-89,
    // Reserved = 0x8A8A,
    // Unassigned = 0x8A8B-FF,
    // Unassigned = 0x8B-99,*,
    // Unassigned = 0x9A00-99,
    // Reserved = 0x9A9A,
    // Unassigned = 0x9A9B-FF,
    // Unassigned = 0x9B-A9,*,
    // Unassigned = 0xAA00-A9,
    // Reserved = 0xAAAA,
    // Unassigned = 0xAAAB-FF,
    // Unassigned = 0xAB-B9,*,
    // Unassigned = 0xBA00-B9,
    // Reserved = 0xBABA,
    // Unassigned = 0xBABB-FF,
    // Unassigned = 0xBB-BF,*,
    // Unassigned = 0xC000,
    TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,
    TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,
    TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,
    TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,
    TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,
    TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,
    TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,
    TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,
    TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,
    TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,
    TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,
    TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,
    TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,
    TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,
    TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,
    TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,
    TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019,
    TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA = 0xC01A,
    TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA = 0xC01B,
    TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA = 0xC01C,
    TLS_SRP_SHA_WITH_AES_128_CBC_SHA = 0xC01D,
    TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA = 0xC01E,
    TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA = 0xC01F,
    TLS_SRP_SHA_WITH_AES_256_CBC_SHA = 0xC020,
    TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA = 0xC021,
    TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA = 0xC022,
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025,
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026,
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029,
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A,
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D,
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E,
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031,
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032,
    TLS_ECDHE_PSK_WITH_RC4_128_SHA = 0xC033,
    TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = 0xC034,
    TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = 0xC035,
    TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = 0xC036,
    TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = 0xC037,
    TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = 0xC038,
    TLS_ECDHE_PSK_WITH_NULL_SHA = 0xC039,
    TLS_ECDHE_PSK_WITH_NULL_SHA256 = 0xC03A,
    TLS_ECDHE_PSK_WITH_NULL_SHA384 = 0xC03B,
    TLS_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC03C,
    TLS_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC03D,
    TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = 0xC03E,
    TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = 0xC03F,
    TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC040,
    TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC041,
    TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = 0xC042,
    TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = 0xC043,
    TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC044,
    TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC045,
    TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 = 0xC046,
    TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 = 0xC047,
    TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = 0xC048,
    TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = 0xC049,
    TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = 0xC04A,
    TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = 0xC04B,
    TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC04C,
    TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC04D,
    TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = 0xC04E,
    TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = 0xC04F,
    TLS_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC050,
    TLS_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC051,
    TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC052,
    TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC053,
    TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC054,
    TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC055,
    TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = 0xC056,
    TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = 0xC057,
    TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = 0xC058,
    TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = 0xC059,
    TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 = 0xC05A,
    TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 = 0xC05B,
    TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = 0xC05C,
    TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = 0xC05D,
    TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = 0xC05E,
    TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = 0xC05F,
    TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC060,
    TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC061,
    TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = 0xC062,
    TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = 0xC063,
    TLS_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC064,
    TLS_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC065,
    TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC066,
    TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC067,
    TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC068,
    TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC069,
    TLS_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06A,
    TLS_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06B,
    TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06C,
    TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06D,
    TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = 0xC06E,
    TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = 0xC06F,
    TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = 0xC070,
    TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = 0xC071,
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC072,
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC073,
    TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC074,
    TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC075,
    TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC076,
    TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC077,
    TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = 0xC078,
    TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = 0xC079,
    TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07A,
    TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07B,
    TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07C,
    TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07D,
    TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC07E,
    TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC07F,
    TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 0xC080,
    TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 0xC081,
    TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = 0xC082,
    TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = 0xC083,
    TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 = 0xC084,
    TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 = 0xC085,
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC086,
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC087,
    TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC088,
    TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC089,
    TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08A,
    TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08B,
    TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08C,
    TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08D,
    TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC08E,
    TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC08F,
    TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC090,
    TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC091,
    TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = 0xC092,
    TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = 0xC093,
    TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC094,
    TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC095,
    TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC096,
    TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC097,
    TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC098,
    TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC099,
    TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = 0xC09A,
    TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = 0xC09B,
    TLS_RSA_WITH_AES_128_CCM = 0xC09C,
    TLS_RSA_WITH_AES_256_CCM = 0xC09D,
    TLS_DHE_RSA_WITH_AES_128_CCM = 0xC09E,
    TLS_DHE_RSA_WITH_AES_256_CCM = 0xC09F,
    TLS_RSA_WITH_AES_128_CCM_8 = 0xC0A0,
    TLS_RSA_WITH_AES_256_CCM_8 = 0xC0A1,
    TLS_DHE_RSA_WITH_AES_128_CCM_8 = 0xC0A2,
    TLS_DHE_RSA_WITH_AES_256_CCM_8 = 0xC0A3,
    TLS_PSK_WITH_AES_128_CCM = 0xC0A4,
    TLS_PSK_WITH_AES_256_CCM = 0xC0A5,
    TLS_DHE_PSK_WITH_AES_128_CCM = 0xC0A6,
    TLS_DHE_PSK_WITH_AES_256_CCM = 0xC0A7,
    TLS_PSK_WITH_AES_128_CCM_8 = 0xC0A8,
    TLS_PSK_WITH_AES_256_CCM_8 = 0xC0A9,
    TLS_PSK_DHE_WITH_AES_128_CCM_8 = 0xC0AA,
    TLS_PSK_DHE_WITH_AES_256_CCM_8 = 0xC0AB,
    TLS_ECDHE_ECDSA_WITH_AES_128_CCM = 0xC0AC,
    TLS_ECDHE_ECDSA_WITH_AES_256_CCM = 0xC0AD,
    TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = 0xC0AE,
    TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = 0xC0AF,
    TLS_ECCPWD_WITH_AES_128_GCM_SHA256 = 0xC0B0,
    TLS_ECCPWD_WITH_AES_256_GCM_SHA384 = 0xC0B1,
    TLS_ECCPWD_WITH_AES_128_CCM_SHA256 = 0xC0B2,
    TLS_ECCPWD_WITH_AES_256_CCM_SHA384 = 0xC0B3,
    TLS_SHA256_SHA256 = 0xC0B4,
    TLS_SHA384_SHA384 = 0xC0B5,
    // Unassigned = 0xC0B6-FF,
    TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC = 0xC100,
    TLS_GOSTR341112_256_WITH_MAGMA_CTR_OMAC = 0xC101,
    TLS_GOSTR341112_256_WITH_28147_CNT_IMIT = 0xC102,
    TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_L = 0xC103,
    TLS_GOSTR341112_256_WITH_MAGMA_MGM_L = 0xC104,
    TLS_GOSTR341112_256_WITH_KUZNYECHIK_MGM_S = 0xC105,
    TLS_GOSTR341112_256_WITH_MAGMA_MGM_S = 0xC106,
    // Unassigned = 0xC107-FF,
    // Unassigned = 0xC2-C9,*,
    // Unassigned = 0xCA00-C9,
    // Reserved = 0xCACA,
    // Unassigned = 0xCACB-FF,
    // Unassigned = 0xCB,*,
    // Unassigned = 0xCC00-A7,
    TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8,
    TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9,
    TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAA,
    TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAB,
    TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAC,
    TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAD,
    TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = 0xCCAE,
    // Unassigned = 0xCCAF-FF,
    // Unassigned = 0xCD-CF,*,
    // Unassigned = 0xD000,
    TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 = 0xD001,
    TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 = 0xD002,
    TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 = 0xD003,
    // Unassigned = 0xD004,
    TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 = 0xD005,
    // Unassigned = 0xD006-FF,
    // Unassigned = 0xD1-D9,*,
    // Unassigned = 0xDA00-D9,
    // Reserved = 0xDADA,
    // Unassigned = 0xDADB-FF,
    // Unassigned = 0xDB-E9,*,
    // Unassigned = 0xEA00-E9,
    // Reserved = 0xEAEA,
    // Unassigned = 0xEAEB-FF,
    // Unassigned = 0xEB-F9,*,
    // Unassigned = 0xFA00-C9,
    // Reserved = 0xFAFA,
    // Unassigned = 0xFAFB-FF,
    // Unassigned = 0xFB-FD,*,
    // Unassigned = 0xFE00-FD,
    // Reserved to avoid conflicts with widely deployed implementations = 0xFEFE-FF,
    // Reserved for Private Use = 0xFF00-FF,
};

enum class content_type : uint8_t {
    // Unassigned (Requires coordination; see           = 0-19,
    change_cipher_spec = 20,
    alert = 21,
    handshake = 22,
    application_data = 23,
    heartbeat = 24,
    tls12_cid = 25,
    ACK = 26,
    // Unassigned = 27-31,
    // Reserved = 32-63,
    // Unassigned (Requires coordination; see           = 64-255,
};

enum class alerts : uint8_t {
    close_notify = 0,
    // Unassigned = 1-9,
    unexpected_message = 10,
    // Unassigned = 11-19,
    bad_record_mac = 20,
    decryption_failed_RESERVED = 21,
    record_overflow = 22,
    // Unassigned = 23-29,
    decompression_failure_RESERVED = 30,
    // Unassigned = 31-39,
    handshake_failure = 40,
    no_certificate_RESERVED = 41,
    bad_certificate = 42,
    unsupported_certificate = 43,
    certificate_revoked = 44,
    certificate_expired = 45,
    certificate_unknown = 46,
    illegal_parameter = 47,
    unknown_ca = 48,
    access_denied = 49,
    decode_error = 50,
    decrypt_error = 51,
    too_many_cids_requested = 52,
    // Unassigned = 53-59,
    export_restriction_RESERVED = 60,
    // Unassigned = 61-69,
    protocol_version = 70,
    insufficient_security = 71,
    // Unassigned = 72-79,
    internal_error = 80,
    // Unassigned = 81-85,
    inappropriate_fallback = 86,
    // Unassigned = 87-89,
    user_canceled = 90,
    // Unassigned = 91-99,
    no_renegotiation_RESERVED = 100,
    // Unassigned = 101-108,
    missing_extension = 109,
    unsupported_extension = 110,
    certificate_unobtainable_RESERVED = 111,
    unrecognized_name = 112,
    bad_certificate_status_response = 113,
    bad_certificate_hash_value_RESERVED = 114,
    unknown_psk_identity = 115,
    certificate_required = 116,
    // Unassigned = 117-119,
    no_application_protocol = 120,
    // Unassigned = 121-255,
};

enum class handshake_type : uint8_t {
    hello_request_RESERVED = 0,
    client_hello = 1,
    server_hello = 2,
    hello_verify_request_RESERVED = 3,
    new_session_ticket = 4,
    end_of_early_data = 5,
    hello_retry_request_RESERVED = 6,
    // Unassigned = 7,
    encrypted_extensions = 8,
    request_connection_id = 9,
    new_connection_id = 10,
    certificate = 11,
    server_key_exchange_RESERVED = 12,
    certificate_request = 13,
    server_hello_done_RESERVED = 14,
    certificate_verify = 15,
    client_key_exchange_RESERVED = 16,
    client_certificate_request = 17,
    // Unassigned = 18-19,
    finished = 20,
    certificate_url_RESERVED = 21,
    certificate_status_RESERVED = 22,
    supplemental_data_RESERVED = 23,
    key_update = 24,
    compressed_certificate = 25,
    ekt_key = 26,
    // Unassigned = 27-253,
    message_hash = 254,
    // Unassigned = 255,
};

enum class supported_groups : uint16_t {
    // Reserved = 0,
    sect163k1 = 1,
    sect163r1 = 2,
    sect163r2 = 3,
    sect193r1 = 4,
    sect193r2 = 5,
    sect233k1 = 6,
    sect233r1 = 7,
    sect239k1 = 8,
    sect283k1 = 9,
    sect283r1 = 10,
    sect409k1 = 11,
    sect409r1 = 12,
    sect571k1 = 13,
    sect571r1 = 14,
    secp160k1 = 15,
    secp160r1 = 16,
    secp160r2 = 17,
    secp192k1 = 18,
    secp192r1 = 19,
    secp224k1 = 20,
    secp224r1 = 21,
    secp256k1 = 22,
    secp256r1 = 23,
    secp384r1 = 24,
    secp521r1 = 25,
    brainpoolP256r1 = 26,
    brainpoolP384r1 = 27,
    brainpoolP512r1 = 28,
    x25519 = 29,
    x448 = 30,
    brainpoolP256r1tls13 = 31,
    brainpoolP384r1tls13 = 32,
    brainpoolP512r1tls13 = 33,
    GC256A = 34,
    GC256B = 35,
    GC256C = 36,
    GC256D = 37,
    GC512A = 38,
    GC512B = 39,
    GC512C = 40,
    curveSM2 = 41,
    // Unassigned = 42-255,
    ffdhe2048 = 256,
    ffdhe3072 = 257,
    ffdhe4096 = 258,
    ffdhe6144 = 259,
    ffdhe8192 = 260,
    // Unassigned = 261-507,
    // Reserved for Private Use = 508-511,
    // Unassigned = 512-2569,
    // Reserved = 2570,
    // Unassigned = 2571-6681,
    // Reserved = 6682,
    // Unassigned = 6683-10793,
    // Reserved = 10794,
    // Unassigned = 10795-14905,
    // Reserved = 14906,
    // Unassigned = 14907-19017,
    // Reserved = 19018,
    // Unassigned = 19019-23129,
    // Reserved = 23130,
    // Unassigned = 23131-27241,
    // Reserved = 27242,
    // Unassigned = 27243-31353,
    // Reserved = 31354,
    // Unassigned = 31355-35465,
    // Reserved = 35466,
    // Unassigned = 35467-39577,
    // Reserved = 39578,
    // Unassigned = 39579-43689,
    // Reserved = 43690,
    // Unassigned = 43691-47801,
    // Reserved = 47802,
    // Unassigned = 47803-51913,
    // Reserved = 51914,
    // Unassigned = 51915-56025,
    // Reserved = 56026,
    // Unassigned = 56027-60137,
    // Reserved = 60138,
    // Unassigned = 60139-64249,
    // Reserved = 64250,
    // Unassigned = 64251-65023,
    // Reserved for Private Use = 65024-65279,
    // Unassigned = 65280,
    arbitrary_explicit_prime_curves = 65281,
    arbitrary_explicit_char2_curves = 65282,
    // Unassigned = 65283-65535,
};

enum class e_c_point_formats : uint8_t {
    uncompressed = 0,
    ansiX962_compressed_prime = 1,
    ansiX962_compressed_char2 = 2,
    // Unassigned = 3-247,
    // Reserved for Private Use = 248-255,
};

enum class e_c_curve_types : uint8_t {
    // Unassigned = 0,
    explicit_prime = 1,
    explicit_char2 = 2,
    named_curve = 3,
    // Unassigned = 4-247,
    // Reserved for Private Use = 248-255,
};

enum class supplemental_data_formats__supplemental_data_type_ : uint16_t {
    user_mapping_data = 0,
    // Unassigned = 1-16385,
    authz_data = 16386,
    // Unassigned = 16387-65279,
    // Reserved for Private Use = 65280-65535,
};

enum class user_mapping_type_values : uint8_t {
    // Unassigned = 0-63,
    upn_domain_hint = 64,
    // Unassigned = 65-223,
    // Reserved for Private Use = 224-255,
};

enum class signature_algorithm : uint8_t {
    anonymous = 0,
    rsa = 1,
    dsa = 2,
    ecdsa = 3,
    // Reserved = 4-6,
    ed25519 = 7,
    ed448 = 8,
    // Reserved = 9-63,
    gostr34102012_256 = 64,
    gostr34102012_512 = 65,
    // Reserved = 66-223,
    // Reserved for Private Use = 224-255,
};

enum class hash_algorithm : uint8_t {
    none = 0,
    md5 = 1,
    sha1 = 2,
    sha224 = 3,
    sha256 = 4,
    sha384 = 5,
    sha512 = 6,
    // Reserved = 7,
    Intrinsic = 8,
    // Reserved = 9-223,
    // Reserved for Private Use = 224-255,
};

enum class exporter_labels : uint8_t {
    // client finished,
    // server finished,
    // master secret,
    // key expansion,
    // client EAP encryption,
    // ttls keying material,
    // ttls challenge,
    // EXTRACTOR-dtls_srtp,
    EXPORTER_DTLS_OVER_SCTP,
    // EXPORTER-ETSI-TC-M2M-Bootstrap,
    // EXPORTER-ETSI-TC-M2M-Connection,
    TLS_MK_Extr,
    EXPORTER_GBA_Digest,
    // EXPORTER: teap session key seed,
    // EXPORTER-oneM2M-Bootstrap,
    // EXPORTER-oneM2M-Connection,
    // EXPORTER-oneM2M-ESCertKE,
    // EXPORTER-Token-Binding,
    // EXPORTER-BBF-Dying-Gasp,
    // EXPORTER-network-time-security,
    EXPORTER_3GPP_N32_MASTER,
    // EXPORTER-ACE-MQTT-Sign-Challenge,
    EXPORTER_EAP_TLS_Key_Material,
    // EXPORTER_EAP_TLS_Method-Id,
    // EXPORTER-BBF-USP-Record,
    // EXPORTER-client authenticator handshake context,
    // EXPORTER-server authenticator handshake context,
    // EXPORTER-client authenticator finished key,
    // EXPORTER-server authenticator finished key,
    // EXPORTER-Channel-Binding,
};

enum class authorization_data_formats : uint8_t {
    x509_attr_cert = 0,
    saml_assertion = 1,
    x509_attr_cert_url = 2,
    saml_assertion_url = 3,
    // Unassigned = 4-63,
    keynote_assertion_list = 64,
    keynote_assertion_list_url = 65,
    dtcp_authorization = 66,
    // Unassigned = 67-223,
    // Reserved for Private Use = 224-255,
};

enum class heartbeat_message_types : uint8_t {
    // Reserved = 0,
    heartbeat_request = 1,
    heartbeat_response = 2,
    // Unassigned = 3-254,
    // Reserved = 255,
};

enum class heartbeat_modes : uint8_t {
    // Reserved = 0,
    peer_allowed_to_send = 1,
    peer_not_allowed_to_send = 2,
    // Unassigned = 3-254,
    // Reserved = 255,
};

enum class signature_scheme : uint16_t {
    // Reserved for backward compatibility = 0x0000-0x0200,
    rsa_pkcs1_sha1 = 0x0201,
    // Reserved for backward compatibility = 0x0202,
    ecdsa_sha1 = 0x0203,
    // Reserved for backward compatibility = 0x0204-0x0400,
    rsa_pkcs1_sha256 = 0x0401,
    // Reserved for backward compatibility = 0x0402,
    ecdsa_secp256r1_sha256 = 0x0403,
    // Reserved for backward compatibility = 0x0404-0x041F,
    rsa_pkcs1_sha256_legacy = 0x0420,
    // Reserved for backward compatibility = 0x0421-0x0500,
    rsa_pkcs1_sha384 = 0x0501,
    // Reserved for backward compatibility = 0x0502,
    ecdsa_secp384r1_sha384 = 0x0503,
    // Reserved for backward compatibility = 0x0504-0x051F,
    rsa_pkcs1_sha384_legacy = 0x0520,
    // Reserved for backward compatibility = 0x0521-0x0600,
    rsa_pkcs1_sha512 = 0x0601,
    // Reserved for backward compatibility = 0x0602,
    ecdsa_secp521r1_sha512 = 0x0603,
    // Reserved for backward compatibility = 0x0604-0x061F,
    rsa_pkcs1_sha512_legacy = 0x0620,
    // Reserved for backward compatibility = 0x0621-0x0703,
    eccsi_sha256 = 0x0704,
    iso_ibs1 = 0x0705,
    iso_ibs2 = 0x0706,
    iso_chinese_ibs = 0x0707,
    sm2sig_sm3 = 0x0708,
    gostr34102012_256a = 0x0709,
    gostr34102012_256b = 0x070A,
    gostr34102012_256c = 0x070B,
    gostr34102012_256d = 0x070C,
    gostr34102012_512a = 0x070D,
    gostr34102012_512b = 0x070E,
    gostr34102012_512c = 0x070F,
    // Unassigned = 0x0710-0x07FF,
    // Reserved for backward compatibility = 0x0800-0x0803,
    rsa_pss_rsae_sha256 = 0x0804,
    rsa_pss_rsae_sha384 = 0x0805,
    rsa_pss_rsae_sha512 = 0x0806,
    ed25519 = 0x0807,
    ed448 = 0x0808,
    rsa_pss_pss_sha256 = 0x0809,
    rsa_pss_pss_sha384 = 0x080A,
    rsa_pss_pss_sha512 = 0x080B,
    // Unassigned = 0x080C-0x0819,
    ecdsa_brainpoolP256r1tls13_sha256 = 0x081A,
    ecdsa_brainpoolP384r1tls13_sha384 = 0x081B,
    ecdsa_brainpoolP512r1tls13_sha512 = 0x081C,
    // Unassigned = 0x081D-0x083F,
    // Reserved for backward compatibility = 0x0840,
    // Reserved for backward compatibility = 0x0841,
    // Unassigned = 0x0842-0x08FF,
    // Reserved for backward compatibility = 0x0900-0x0903,
    // Unassigned = 0x0904-0x09FF,
    // Reserved for backward compatibility = 0x0A00-0x0A03,
    // Unassigned = 0x0A04-0x0AFF,
    // Reserved for backward compatibility = 0x0B00-0x0B03,
    // Unassigned = 0x0B04-0x0BFF,
    // Reserved for backward compatibility = 0x0C00-0x0C03,
    // Unassigned = 0x0C04-0x0CFF,
    // Reserved for backward compatibility = 0x0D00-0x0D03,
    // Unassigned = 0x0D04-0x0DFF,
    // Reserved for backward compatibility = 0x0E00-0x0E03,
    // Unassigned = 0x0E04-0x0EFF,
    // Reserved for backward compatibility = 0x0F00-0x0F03,
    // Unassigned = 0x0F04-0x0FFF,
    // Reserved for backward compatibility = 0x1000-0x1003,
    // Unassigned = 0x1004-0x10FF,
    // Reserved for backward compatibility = 0x1100-0x1103,
    // Unassigned = 0x1104-0x11FF,
    // Reserved for backward compatibility = 0x1200-0x1203,
    // Unassigned = 0x1204-0x12FF,
    // Reserved for backward compatibility = 0x1300-0x1303,
    // Unassigned = 0x1304-0x13FF,
    // Reserved for backward compatibility = 0x1400-0x1403,
    // Unassigned = 0x1404-0x14FF,
    // Reserved for backward compatibility = 0x1500-0x1503,
    // Unassigned = 0x1504-0x15FF,
    // Reserved for backward compatibility = 0x1600-0x1603,
    // Unassigned = 0x1604-0x16FF,
    // Reserved for backward compatibility = 0x1700-0x1703,
    // Unassigned = 0x1704-0x17FF,
    // Reserved for backward compatibility = 0x1800-0x1803,
    // Unassigned = 0x1804-0x18FF,
    // Reserved for backward compatibility = 0x1900-0x1903,
    // Unassigned = 0x1904-0x19FF,
    // Reserved for backward compatibility = 0x1A00-0x1A03,
    // Unassigned = 0x1A04-0x1AFF,
    // Reserved for backward compatibility = 0x1B00-0x1B03,
    // Unassigned = 0x1B04-0x1BFF,
    // Reserved for backward compatibility = 0x1C00-0x1C03,
    // Unassigned = 0x1C04-0x1CFF,
    // Reserved for backward compatibility = 0x1D00-0x1D03,
    // Unassigned = 0x1D04-0x1DFF,
    // Reserved for backward compatibility = 0x1E00-0x1E03,
    // Unassigned = 0x1E04-0x1EFF,
    // Reserved for backward compatibility = 0x1F00-0x1F03,
    // Unassigned = 0x1F04-0x1FFF,
    // Reserved for backward compatibility = 0x2000-0x2003,
    // Unassigned = 0x2004-0x20FF,
    // Reserved for backward compatibility = 0x2100-0x2103,
    // Unassigned = 0x2104-0x21FF,
    // Reserved for backward compatibility = 0x2200-0x2203,
    // Unassigned = 0x2204-0x22FF,
    // Reserved for backward compatibility = 0x2300-0x2303,
    // Unassigned = 0x2304-0x23FF,
    // Reserved for backward compatibility = 0x2400-0x2403,
    // Unassigned = 0x2404-0x24FF,
    // Reserved for backward compatibility = 0x2500-0x2503,
    // Unassigned = 0x2504-0x25FF,
    // Reserved for backward compatibility = 0x2600-0x2603,
    // Unassigned = 0x2604-0x26FF,
    // Reserved for backward compatibility = 0x2700-0x2703,
    // Unassigned = 0x2704-0x27FF,
    // Reserved for backward compatibility = 0x2800-0x2803,
    // Unassigned = 0x2804-0x28FF,
    // Reserved for backward compatibility = 0x2900-0x2903,
    // Unassigned = 0x2904-0x29FF,
    // Reserved for backward compatibility = 0x2A00-0x2A03,
    // Unassigned = 0x2A04-0x2AFF,
    // Reserved for backward compatibility = 0x2B00-0x2B03,
    // Unassigned = 0x2B04-0x2BFF,
    // Reserved for backward compatibility = 0x2C00-0x2C03,
    // Unassigned = 0x2C04-0x2CFF,
    // Reserved for backward compatibility = 0x2D00-0x2D03,
    // Unassigned = 0x2D04-0x2DFF,
    // Reserved for backward compatibility = 0x2E00-0x2E03,
    // Unassigned = 0x2E04-0x2EFF,
    // Reserved for backward compatibility = 0x2F00-0x2F03,
    // Unassigned = 0x2F04-0x2FFF,
    // Reserved for backward compatibility = 0x3000-0x3003,
    // Unassigned = 0x3004-0x30FF,
    // Reserved for backward compatibility = 0x3100-0x3103,
    // Unassigned = 0x3104-0x31FF,
    // Reserved for backward compatibility = 0x3200-0x3203,
    // Unassigned = 0x3204-0x32FF,
    // Reserved for backward compatibility = 0x3300-0x3303,
    // Unassigned = 0x3304-0x33FF,
    // Reserved for backward compatibility = 0x3400-0x3403,
    // Unassigned = 0x3404-0x34FF,
    // Reserved for backward compatibility = 0x3500-0x3503,
    // Unassigned = 0x3504-0x35FF,
    // Reserved for backward compatibility = 0x3600-0x3603,
    // Unassigned = 0x3604-0x36FF,
    // Reserved for backward compatibility = 0x3700-0x3703,
    // Unassigned = 0x3704-0x37FF,
    // Reserved for backward compatibility = 0x3800-0x3803,
    // Unassigned = 0x3804-0x38FF,
    // Reserved for backward compatibility = 0x3900-0x3903,
    // Unassigned = 0x3904-0x39FF,
    // Reserved for backward compatibility = 0x3A00-0x3A03,
    // Unassigned = 0x3A04-0x3AFF,
    // Reserved for backward compatibility = 0x3B00-0x3B03,
    // Unassigned = 0x3B04-0x3BFF,
    // Reserved for backward compatibility = 0x3C00-0x3C03,
    // Unassigned = 0x3C04-0x3CFF,
    // Reserved for backward compatibility = 0x3D00-0x3D03,
    // Unassigned = 0x3D04-0x3DFF,
    // Reserved for backward compatibility = 0x3E00-0x3E03,
    // Unassigned = 0x3E04-0x3EFF,
    // Reserved for backward compatibility = 0x3F00-0x3F03,
    // Unassigned = 0x3F04-0x3FFF,
    // Reserved for backward compatibility = 0x4000-0x4003,
    // Unassigned = 0x4004-0x40FF,
    // Reserved for backward compatibility = 0x4100-0x4103,
    // Unassigned = 0x4104-0x41FF,
    // Reserved for backward compatibility = 0x4200-0x4203,
    // Unassigned = 0x4204-0x42FF,
    // Reserved for backward compatibility = 0x4300-0x4303,
    // Unassigned = 0x4304-0x43FF,
    // Reserved for backward compatibility = 0x4400-0x4403,
    // Unassigned = 0x4404-0x44FF,
    // Reserved for backward compatibility = 0x4500-0x4503,
    // Unassigned = 0x4504-0x45FF,
    // Reserved for backward compatibility = 0x4600-0x4603,
    // Unassigned = 0x4604-0x46FF,
    // Reserved for backward compatibility = 0x4700-0x4703,
    // Unassigned = 0x4704-0x47FF,
    // Reserved for backward compatibility = 0x4800-0x4803,
    // Unassigned = 0x4804-0x48FF,
    // Reserved for backward compatibility = 0x4900-0x4903,
    // Unassigned = 0x4904-0x49FF,
    // Reserved for backward compatibility = 0x4A00-0x4A03,
    // Unassigned = 0x4A04-0x4AFF,
    // Reserved for backward compatibility = 0x4B00-0x4B03,
    // Unassigned = 0x4B04-0x4BFF,
    // Reserved for backward compatibility = 0x4C00-0x4C03,
    // Unassigned = 0x4C04-0x4CFF,
    // Reserved for backward compatibility = 0x4D00-0x4D03,
    // Unassigned = 0x4D04-0x4DFF,
    // Reserved for backward compatibility = 0x4E00-0x4E03,
    // Unassigned = 0x4E04-0x4EFF,
    // Reserved for backward compatibility = 0x4F00-0x4F03,
    // Unassigned = 0x4F04-0x4FFF,
    // Reserved for backward compatibility = 0x5000-0x5003,
    // Unassigned = 0x5004-0x50FF,
    // Reserved for backward compatibility = 0x5100-0x5103,
    // Unassigned = 0x5104-0x51FF,
    // Reserved for backward compatibility = 0x5200-0x5203,
    // Unassigned = 0x5204-0x52FF,
    // Reserved for backward compatibility = 0x5300-0x5303,
    // Unassigned = 0x5304-0x53FF,
    // Reserved for backward compatibility = 0x5400-0x5403,
    // Unassigned = 0x5404-0x54FF,
    // Reserved for backward compatibility = 0x5500-0x5503,
    // Unassigned = 0x5504-0x55FF,
    // Reserved for backward compatibility = 0x5600-0x5603,
    // Unassigned = 0x5604-0x56FF,
    // Reserved for backward compatibility = 0x5700-0x5703,
    // Unassigned = 0x5704-0x57FF,
    // Reserved for backward compatibility = 0x5800-0x5803,
    // Unassigned = 0x5804-0x58FF,
    // Reserved for backward compatibility = 0x5900-0x5903,
    // Unassigned = 0x5904-0x59FF,
    // Reserved for backward compatibility = 0x5A00-0x5A03,
    // Unassigned = 0x5A04-0x5AFF,
    // Reserved for backward compatibility = 0x5B00-0x5B03,
    // Unassigned = 0x5B04-0x5BFF,
    // Reserved for backward compatibility = 0x5C00-0x5C03,
    // Unassigned = 0x5C04-0x5CFF,
    // Reserved for backward compatibility = 0x5D00-0x5D03,
    // Unassigned = 0x5D04-0x5DFF,
    // Reserved for backward compatibility = 0x5E00-0x5E03,
    // Unassigned = 0x5E04-0x5EFF,
    // Reserved for backward compatibility = 0x5F00-0x5F03,
    // Unassigned = 0x5F04-0x5FFF,
    // Reserved for backward compatibility = 0x6000-0x6003,
    // Unassigned = 0x6004-0x60FF,
    // Reserved for backward compatibility = 0x6100-0x6103,
    // Unassigned = 0x6104-0x61FF,
    // Reserved for backward compatibility = 0x6200-0x6203,
    // Unassigned = 0x6204-0x62FF,
    // Reserved for backward compatibility = 0x6300-0x6303,
    // Unassigned = 0x6304-0x63FF,
    // Reserved for backward compatibility = 0x6400-0x6403,
    // Unassigned = 0x6404-0x64FF,
    // Reserved for backward compatibility = 0x6500-0x6503,
    // Unassigned = 0x6504-0x65FF,
    // Reserved for backward compatibility = 0x6600-0x6603,
    // Unassigned = 0x6604-0x66FF,
    // Reserved for backward compatibility = 0x6700-0x6703,
    // Unassigned = 0x6704-0x67FF,
    // Reserved for backward compatibility = 0x6800-0x6803,
    // Unassigned = 0x6804-0x68FF,
    // Reserved for backward compatibility = 0x6900-0x6903,
    // Unassigned = 0x6904-0x69FF,
    // Reserved for backward compatibility = 0x6A00-0x6A03,
    // Unassigned = 0x6A04-0x6AFF,
    // Reserved for backward compatibility = 0x6B00-0x6B03,
    // Unassigned = 0x6B04-0x6BFF,
    // Reserved for backward compatibility = 0x6C00-0x6C03,
    // Unassigned = 0x6C04-0x6CFF,
    // Reserved for backward compatibility = 0x6D00-0x6D03,
    // Unassigned = 0x6D04-0x6DFF,
    // Reserved for backward compatibility = 0x6E00-0x6E03,
    // Unassigned = 0x6E04-0x6EFF,
    // Reserved for backward compatibility = 0x6F00-0x6F03,
    // Unassigned = 0x6F04-0x6FFF,
    // Reserved for backward compatibility = 0x7000-0x7003,
    // Unassigned = 0x7004-0x70FF,
    // Reserved for backward compatibility = 0x7100-0x7103,
    // Unassigned = 0x7104-0x71FF,
    // Reserved for backward compatibility = 0x7200-0x7203,
    // Unassigned = 0x7204-0x72FF,
    // Reserved for backward compatibility = 0x7300-0x7303,
    // Unassigned = 0x7304-0x73FF,
    // Reserved for backward compatibility = 0x7400-0x7403,
    // Unassigned = 0x7404-0x74FF,
    // Reserved for backward compatibility = 0x7500-0x7503,
    // Unassigned = 0x7504-0x75FF,
    // Reserved for backward compatibility = 0x7600-0x7603,
    // Unassigned = 0x7604-0x76FF,
    // Reserved for backward compatibility = 0x7700-0x7703,
    // Unassigned = 0x7704-0x77FF,
    // Reserved for backward compatibility = 0x7800-0x7803,
    // Unassigned = 0x7804-0x78FF,
    // Reserved for backward compatibility = 0x7900-0x7903,
    // Unassigned = 0x7904-0x79FF,
    // Reserved for backward compatibility = 0x7A00-0x7A03,
    // Unassigned = 0x7A04-0x7AFF,
    // Reserved for backward compatibility = 0x7B00-0x7B03,
    // Unassigned = 0x7B04-0x7BFF,
    // Reserved for backward compatibility = 0x7C00-0x7C03,
    // Unassigned = 0x7C04-0x7CFF,
    // Reserved for backward compatibility = 0x7D00-0x7D03,
    // Unassigned = 0x7D04-0x7DFF,
    // Reserved for backward compatibility = 0x7E00-0x7E03,
    // Unassigned = 0x7E04-0x7EFF,
    // Reserved for backward compatibility = 0x7F00-0x7F03,
    // Unassigned = 0x7F04-0x7FFF,
    // Reserved for backward compatibility = 0x8000-0x8003,
    // Unassigned = 0x8004-0x80FF,
    // Reserved for backward compatibility = 0x8100-0x8103,
    // Unassigned = 0x8104-0x81FF,
    // Reserved for backward compatibility = 0x8200-0x8203,
    // Unassigned = 0x8204-0x82FF,
    // Reserved for backward compatibility = 0x8300-0x8303,
    // Unassigned = 0x8304-0x83FF,
    // Reserved for backward compatibility = 0x8400-0x8403,
    // Unassigned = 0x8404-0x84FF,
    // Reserved for backward compatibility = 0x8500-0x8503,
    // Unassigned = 0x8504-0x85FF,
    // Reserved for backward compatibility = 0x8600-0x8603,
    // Unassigned = 0x8604-0x86FF,
    // Reserved for backward compatibility = 0x8700-0x8703,
    // Unassigned = 0x8704-0x87FF,
    // Reserved for backward compatibility = 0x8800-0x8803,
    // Unassigned = 0x8804-0x88FF,
    // Reserved for backward compatibility = 0x8900-0x8903,
    // Unassigned = 0x8904-0x89FF,
    // Reserved for backward compatibility = 0x8A00-0x8A03,
    // Unassigned = 0x8A04-0x8AFF,
    // Reserved for backward compatibility = 0x8B00-0x8B03,
    // Unassigned = 0x8B04-0x8BFF,
    // Reserved for backward compatibility = 0x8C00-0x8C03,
    // Unassigned = 0x8C04-0x8CFF,
    // Reserved for backward compatibility = 0x8D00-0x8D03,
    // Unassigned = 0x8D04-0x8DFF,
    // Reserved for backward compatibility = 0x8E00-0x8E03,
    // Unassigned = 0x8E04-0x8EFF,
    // Reserved for backward compatibility = 0x8F00-0x8F03,
    // Unassigned = 0x8F04-0x8FFF,
    // Reserved for backward compatibility = 0x9000-0x9003,
    // Unassigned = 0x9004-0x90FF,
    // Reserved for backward compatibility = 0x9100-0x9103,
    // Unassigned = 0x9104-0x91FF,
    // Reserved for backward compatibility = 0x9200-0x9203,
    // Unassigned = 0x9204-0x92FF,
    // Reserved for backward compatibility = 0x9300-0x9303,
    // Unassigned = 0x9304-0x93FF,
    // Reserved for backward compatibility = 0x9400-0x9403,
    // Unassigned = 0x9404-0x94FF,
    // Reserved for backward compatibility = 0x9500-0x9503,
    // Unassigned = 0x9504-0x95FF,
    // Reserved for backward compatibility = 0x9600-0x9603,
    // Unassigned = 0x9604-0x96FF,
    // Reserved for backward compatibility = 0x9700-0x9703,
    // Unassigned = 0x9704-0x97FF,
    // Reserved for backward compatibility = 0x9800-0x9803,
    // Unassigned = 0x9804-0x98FF,
    // Reserved for backward compatibility = 0x9900-0x9903,
    // Unassigned = 0x9904-0x99FF,
    // Reserved for backward compatibility = 0x9A00-0x9A03,
    // Unassigned = 0x9A04-0x9AFF,
    // Reserved for backward compatibility = 0x9B00-0x9B03,
    // Unassigned = 0x9B04-0x9BFF,
    // Reserved for backward compatibility = 0x9C00-0x9C03,
    // Unassigned = 0x9C04-0x9CFF,
    // Reserved for backward compatibility = 0x9D00-0x9D03,
    // Unassigned = 0x9D04-0x9DFF,
    // Reserved for backward compatibility = 0x9E00-0x9E03,
    // Unassigned = 0x9E04-0x9EFF,
    // Reserved for backward compatibility = 0x9F00-0x9F03,
    // Unassigned = 0x9F04-0x9FFF,
    // Reserved for backward compatibility = 0xA000-0xA003,
    // Unassigned = 0xA004-0xA0FF,
    // Reserved for backward compatibility = 0xA100-0xA103,
    // Unassigned = 0xA104-0xA1FF,
    // Reserved for backward compatibility = 0xA200-0xA203,
    // Unassigned = 0xA204-0xA2FF,
    // Reserved for backward compatibility = 0xA300-0xA303,
    // Unassigned = 0xA304-0xA3FF,
    // Reserved for backward compatibility = 0xA400-0xA403,
    // Unassigned = 0xA404-0xA4FF,
    // Reserved for backward compatibility = 0xA500-0xA503,
    // Unassigned = 0xA504-0xA5FF,
    // Reserved for backward compatibility = 0xA600-0xA603,
    // Unassigned = 0xA604-0xA6FF,
    // Reserved for backward compatibility = 0xA700-0xA703,
    // Unassigned = 0xA704-0xA7FF,
    // Reserved for backward compatibility = 0xA800-0xA803,
    // Unassigned = 0xA804-0xA8FF,
    // Reserved for backward compatibility = 0xA900-0xA903,
    // Unassigned = 0xA904-0xA9FF,
    // Reserved for backward compatibility = 0xAA00-0xAA03,
    // Unassigned = 0xAA04-0xAAFF,
    // Reserved for backward compatibility = 0xAB00-0xAB03,
    // Unassigned = 0xAB04-0xABFF,
    // Reserved for backward compatibility = 0xAC00-0xAC03,
    // Unassigned = 0xAC04-0xACFF,
    // Reserved for backward compatibility = 0xAD00-0xAD03,
    // Unassigned = 0xAD04-0xADFF,
    // Reserved for backward compatibility = 0xAE00-0xAE03,
    // Unassigned = 0xAE04-0xAEFF,
    // Reserved for backward compatibility = 0xAF00-0xAF03,
    // Unassigned = 0xAF04-0xAFFF,
    // Reserved for backward compatibility = 0xB000-0xB003,
    // Unassigned = 0xB004-0xB0FF,
    // Reserved for backward compatibility = 0xB100-0xB103,
    // Unassigned = 0xB104-0xB1FF,
    // Reserved for backward compatibility = 0xB200-0xB203,
    // Unassigned = 0xB204-0xB2FF,
    // Reserved for backward compatibility = 0xB300-0xB303,
    // Unassigned = 0xB304-0xB3FF,
    // Reserved for backward compatibility = 0xB400-0xB403,
    // Unassigned = 0xB404-0xB4FF,
    // Reserved for backward compatibility = 0xB500-0xB503,
    // Unassigned = 0xB504-0xB5FF,
    // Reserved for backward compatibility = 0xB600-0xB603,
    // Unassigned = 0xB604-0xB6FF,
    // Reserved for backward compatibility = 0xB700-0xB703,
    // Unassigned = 0xB704-0xB7FF,
    // Reserved for backward compatibility = 0xB800-0xB803,
    // Unassigned = 0xB804-0xB8FF,
    // Reserved for backward compatibility = 0xB900-0xB903,
    // Unassigned = 0xB904-0xB9FF,
    // Reserved for backward compatibility = 0xBA00-0xBA03,
    // Unassigned = 0xBA04-0xBAFF,
    // Reserved for backward compatibility = 0xBB00-0xBB03,
    // Unassigned = 0xBB04-0xBBFF,
    // Reserved for backward compatibility = 0xBC00-0xBC03,
    // Unassigned = 0xBC04-0xBCFF,
    // Reserved for backward compatibility = 0xBD00-0xBD03,
    // Unassigned = 0xBD04-0xBDFF,
    // Reserved for backward compatibility = 0xBE00-0xBE03,
    // Unassigned = 0xBE04-0xBEFF,
    // Reserved for backward compatibility = 0xBF00-0xBF03,
    // Unassigned = 0xBF04-0xBFFF,
    // Reserved for backward compatibility = 0xC000-0xC003,
    // Unassigned = 0xC004-0xC0FF,
    // Reserved for backward compatibility = 0xC100-0xC103,
    // Unassigned = 0xC104-0xC1FF,
    // Reserved for backward compatibility = 0xC200-0xC203,
    // Unassigned = 0xC204-0xC2FF,
    // Reserved for backward compatibility = 0xC300-0xC303,
    // Unassigned = 0xC304-0xC3FF,
    // Reserved for backward compatibility = 0xC400-0xC403,
    // Unassigned = 0xC404-0xC4FF,
    // Reserved for backward compatibility = 0xC500-0xC503,
    // Unassigned = 0xC504-0xC5FF,
    // Reserved for backward compatibility = 0xC600-0xC603,
    // Unassigned = 0xC604-0xC6FF,
    // Reserved for backward compatibility = 0xC700-0xC703,
    // Unassigned = 0xC704-0xC7FF,
    // Reserved for backward compatibility = 0xC800-0xC803,
    // Unassigned = 0xC804-0xC8FF,
    // Reserved for backward compatibility = 0xC900-0xC903,
    // Unassigned = 0xC904-0xC9FF,
    // Reserved for backward compatibility = 0xCA00-0xCA03,
    // Unassigned = 0xCA04-0xCAFF,
    // Reserved for backward compatibility = 0xCB00-0xCB03,
    // Unassigned = 0xCB04-0xCBFF,
    // Reserved for backward compatibility = 0xCC00-0xCC03,
    // Unassigned = 0xCC04-0xCCFF,
    // Reserved for backward compatibility = 0xCD00-0xCD03,
    // Unassigned = 0xCD04-0xCDFF,
    // Reserved for backward compatibility = 0xCE00-0xCE03,
    // Unassigned = 0xCE04-0xCEFF,
    // Reserved for backward compatibility = 0xCF00-0xCF03,
    // Unassigned = 0xCF04-0xCFFF,
    // Reserved for backward compatibility = 0xD000-0xD003,
    // Unassigned = 0xD004-0xD0FF,
    // Reserved for backward compatibility = 0xD100-0xD103,
    // Unassigned = 0xD104-0xD1FF,
    // Reserved for backward compatibility = 0xD200-0xD203,
    // Unassigned = 0xD204-0xD2FF,
    // Reserved for backward compatibility = 0xD300-0xD303,
    // Unassigned = 0xD304-0xD3FF,
    // Reserved for backward compatibility = 0xD400-0xD403,
    // Unassigned = 0xD404-0xD4FF,
    // Reserved for backward compatibility = 0xD500-0xD503,
    // Unassigned = 0xD504-0xD5FF,
    // Reserved for backward compatibility = 0xD600-0xD603,
    // Unassigned = 0xD604-0xD6FF,
    // Reserved for backward compatibility = 0xD700-0xD703,
    // Unassigned = 0xD704-0xD7FF,
    // Reserved for backward compatibility = 0xD800-0xD803,
    // Unassigned = 0xD804-0xD8FF,
    // Reserved for backward compatibility = 0xD900-0xD903,
    // Unassigned = 0xD904-0xD9FF,
    // Reserved for backward compatibility = 0xDA00-0xDA03,
    // Unassigned = 0xDA04-0xDAFF,
    // Reserved for backward compatibility = 0xDB00-0xDB03,
    // Unassigned = 0xDB04-0xDBFF,
    // Reserved for backward compatibility = 0xDC00-0xDC03,
    // Unassigned = 0xDC04-0xDCFF,
    // Reserved for backward compatibility = 0xDD00-0xDD03,
    // Unassigned = 0xDD04-0xDDFF,
    // Reserved for backward compatibility = 0xDE00-0xDE03,
    // Unassigned = 0xDE04-0xDEFF,
    // Reserved for backward compatibility = 0xDF00-0xDF03,
    // Unassigned = 0xDF04-0xDFFF,
    // Reserved for backward compatibility = 0xE000-0xE003,
    // Unassigned = 0xE004-0xE0FF,
    // Reserved for backward compatibility = 0xE100-0xE103,
    // Unassigned = 0xE104-0xE1FF,
    // Reserved for backward compatibility = 0xE200-0xE203,
    // Unassigned = 0xE204-0xE2FF,
    // Reserved for backward compatibility = 0xE300-0xE303,
    // Unassigned = 0xE304-0xE3FF,
    // Reserved for backward compatibility = 0xE400-0xE403,
    // Unassigned = 0xE404-0xE4FF,
    // Reserved for backward compatibility = 0xE500-0xE503,
    // Unassigned = 0xE504-0xE5FF,
    // Reserved for backward compatibility = 0xE600-0xE603,
    // Unassigned = 0xE604-0xE6FF,
    // Reserved for backward compatibility = 0xE700-0xE703,
    // Unassigned = 0xE704-0xE7FF,
    // Reserved for backward compatibility = 0xE800-0xE803,
    // Unassigned = 0xE804-0xE8FF,
    // Reserved for backward compatibility = 0xE900-0xE903,
    // Unassigned = 0xE904-0xE9FF,
    // Reserved for backward compatibility = 0xEA00-0xEA03,
    // Unassigned = 0xEA04-0xEAFF,
    // Reserved for backward compatibility = 0xEB00-0xEB03,
    // Unassigned = 0xEB04-0xEBFF,
    // Reserved for backward compatibility = 0xEC00-0xEC03,
    // Unassigned = 0xEC04-0xECFF,
    // Reserved for backward compatibility = 0xED00-0xED03,
    // Unassigned = 0xED04-0xEDFF,
    // Reserved for backward compatibility = 0xEE00-0xEE03,
    // Unassigned = 0xEE04-0xEEFF,
    // Reserved for backward compatibility = 0xEF00-0xEF03,
    // Unassigned = 0xEF04-0xEFFF,
    // Reserved for backward compatibility = 0xF000-0xF003,
    // Unassigned = 0xF004-0xF0FF,
    // Reserved for backward compatibility = 0xF100-0xF103,
    // Unassigned = 0xF104-0xF1FF,
    // Reserved for backward compatibility = 0xF200-0xF203,
    // Unassigned = 0xF204-0xF2FF,
    // Reserved for backward compatibility = 0xF300-0xF303,
    // Unassigned = 0xF304-0xF3FF,
    // Reserved for backward compatibility = 0xF400-0xF403,
    // Unassigned = 0xF404-0xF4FF,
    // Reserved for backward compatibility = 0xF500-0xF503,
    // Unassigned = 0xF504-0xF5FF,
    // Reserved for backward compatibility = 0xF600-0xF603,
    // Unassigned = 0xF604-0xF6FF,
    // Reserved for backward compatibility = 0xF700-0xF703,
    // Unassigned = 0xF704-0xF7FF,
    // Reserved for backward compatibility = 0xF800-0xF803,
    // Unassigned = 0xF804-0xF8FF,
    // Reserved for backward compatibility = 0xF900-0xF903,
    // Unassigned = 0xF904-0xF9FF,
    // Reserved for backward compatibility = 0xFA00-0xFA03,
    // Unassigned = 0xFA04-0xFAFF,
    // Reserved for backward compatibility = 0xFB00-0xFB03,
    // Unassigned = 0xFB04-0xFBFF,
    // Reserved for backward compatibility = 0xFC00-0xFC03,
    // Unassigned = 0xFC04-0xFCFF,
    // Reserved for backward compatibility = 0xFD00-0xFD03,
    // Unassigned = 0xFD04-0xFDFF,
    // Reserved for Private Use = 0xFE00-0xFFFF,
};

enum class psk_key_exchange_mode : uint8_t {
    psk_ke = 0,
    psk_dhe_ke = 1,
    // Unassigned = 2-253,
    // Reserved for Private Use = 254-255,
};

enum class k_d_f_identifiers : uint8_t {
    // Reserved = 0x0000,
    HKDF_SHA256 = 0x0001,
    HKDF_SHA384 = 0x0002,
    // Unassigned = 0x0003-0xfeff,
    // Reserved for Private Use = 0xff00-0xffff,
};
